{"ast":null,"code":"var _jsxFileName = \"/Users/alex/projects/portfolio/src/components/contacts/contact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const initialFormState = {\n    user: ``,\n    email: ``,\n    comment: ``\n  };\n  const [currentFormState, setCurrentFormState] = useState({ ...initialFormState\n  });\n  const [isCheckboxChecked, setIsCheckboxChecked] = useState(true);\n  const [isInputError, setIsInputError] = useState({\n    isUserError: false,\n    isEmail: false,\n    isCommentError: false,\n    isCheckBoxError: false\n  });\n\n  const checkInputContent = () => {\n    const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n    if (!currentFormState.user) {\n      setIsInputError({ ...isInputError,\n        isUserError: true\n      });\n    } else {\n      setIsInputError({ ...isInputError,\n        isUserError: false\n      });\n    }\n\n    if (!currentFormState.email || regex.test(currentFormState.email) === false) {\n      setIsInputError({ ...isInputError,\n        isEmail: true\n      });\n    } else {\n      setIsInputError({ ...isInputError,\n        isEmail: false\n      });\n    }\n\n    if (!currentFormState.comment) {\n      setIsInputError({ ...isInputError,\n        isCommentError: true\n      });\n    } else {\n      setIsInputError({ ...isInputError,\n        isCommentError: false\n      });\n    }\n\n    if (isCheckboxChecked === false) {\n      setIsInputError({ ...isInputError,\n        isCheckBoxError: true\n      });\n    } else {\n      setIsInputError({ ...isInputError,\n        isCheckBoxError: false\n      });\n    }\n  };\n\n  const formRef = useRef();\n\n  const validateForm = () => {};\n\n  const handleInputChange = evt => {\n    setCurrentFormState({ ...currentFormState,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (currentFormState.user.length !== 0 && currentFormState.comment.length !== 0) {\n      // onSubmitFormReview(currentFormState);\n      setCurrentFormState({ ...initialFormState\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contact\",\n      id: \"contacts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title contact__title\",\n        children: \"Contact me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"contact__slogan\",\n        children: \"Have a question or want to work together? Send me a message and let's start your project right now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: formRef,\n        className: \"contact__wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"#\",\n          className: \"container-site contact__form contact-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list contact__list contact-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group contact-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: `form-control contact-form__input ${isInputError.isUserError ? `contact-form__input--error` : ``}`,\n                id: \"name\",\n                placeholder: \"Your name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group contact-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: `form-control contact-form__input ${isInputError.isEmail ? `contact-form__input--error` : ``}`,\n                id: \"email\",\n                placeholder: \"Your email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group contact-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: `contact-form__textarea ${isInputError.isCommentError ? `contact-form__textarea--error` : ``} form-control `,\n                id: \"message\",\n                defaultValue: \"Leave me your message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group contact-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                defaultChecked: isCheckboxChecked,\n                type: \"checkbox\",\n                className: \"contact-form__checkbox\",\n                id: \"agreement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"agreement\",\n                className: \"contact-form__checkbox-label\",\n                children: \"I agree to the assessment, use and processing of my personal data.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button contact-form__button\",\n            children: \"Send me a mesage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Contact, \"RTUCOoxXTVVwMaCO359fhqlQmzY=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/alex/projects/portfolio/src/components/contacts/contact.jsx"],"names":["React","useRef","useState","Contact","initialFormState","user","email","comment","currentFormState","setCurrentFormState","isCheckboxChecked","setIsCheckboxChecked","isInputError","setIsInputError","isUserError","isEmail","isCommentError","isCheckBoxError","checkInputContent","regex","test","formRef","validateForm","handleInputChange","evt","target","name","value","handleSubmit","preventDefault","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,gBAAgB,GAAG;AACrBC,IAAAA,IAAI,EAAG,EADc;AAErBC,IAAAA,KAAK,EAAG,EAFa;AAGrBC,IAAAA,OAAO,EAAG;AAHW,GAAzB;AAKA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,EAAC,GAAGE;AAAJ,GAAD,CAAxD;AACA,QAAM,CAACM,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CAAC,IAAD,CAA1D;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC;AAC7CY,IAAAA,WAAW,EAAE,KADgC;AAE7CC,IAAAA,OAAO,EAAE,KAFoC;AAG7CC,IAAAA,cAAc,EAAE,KAH6B;AAI7CC,IAAAA,eAAe,EAAE;AAJ4B,GAAD,CAAhD;;AAMA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,UAAMC,KAAK,GAAG,sHAAd;;AACA,QAAI,CAACX,gBAAgB,CAACH,IAAtB,EAA4B;AACxBQ,MAAAA,eAAe,CAAC,EACZ,GAAGD,YADS;AAEZE,QAAAA,WAAW,EAAE;AAFD,OAAD,CAAf;AAIH,KALD,MAKO;AACHD,MAAAA,eAAe,CAAC,EACZ,GAAGD,YADS;AAEZE,QAAAA,WAAW,EAAE;AAFD,OAAD,CAAf;AAIH;;AAED,QAAI,CAACN,gBAAgB,CAACF,KAAlB,IAA2Ba,KAAK,CAACC,IAAN,CAAWZ,gBAAgB,CAACF,KAA5B,MAAuC,KAAtE,EAA6E;AACzEO,MAAAA,eAAe,CAAC,EACZ,GAAGD,YADS;AAEZG,QAAAA,OAAO,EAAE;AAFG,OAAD,CAAf;AAIH,KALD,MAKO;AACHF,MAAAA,eAAe,CAAC,EACZ,GAAGD,YADS;AAEZG,QAAAA,OAAO,EAAE;AAFG,OAAD,CAAf;AAIH;;AAED,QAAI,CAACP,gBAAgB,CAACD,OAAtB,EAA+B;AAC3BM,MAAAA,eAAe,CAAC,EACZ,GAAGD,YADS;AAEZI,QAAAA,cAAc,EAAE;AAFJ,OAAD,CAAf;AAIH,KALD,MAKO;AACHH,MAAAA,eAAe,CAAC,EACZ,GAAGD,YADS;AAEZI,QAAAA,cAAc,EAAE;AAFJ,OAAD,CAAf;AAIH;;AAED,QAAIN,iBAAiB,KAAK,KAA1B,EAAiC;AAC7BG,MAAAA,eAAe,CAAC,EACZ,GAAGD,YADS;AAEZK,QAAAA,eAAe,EAAE;AAFL,OAAD,CAAf;AAIH,KALD,MAKO;AACHJ,MAAAA,eAAe,CAAC,EACZ,GAAGD,YADS;AAEZK,QAAAA,eAAe,EAAE;AAFL,OAAD,CAAf;AAIH;AAEF,GAlDH;;AAmDA,QAAMI,OAAO,GAAGpB,MAAM,EAAtB;;AACA,QAAMqB,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,QAAMC,iBAAiB,GAAIC,GAAD,IAAS;AAC/Bf,IAAAA,mBAAmB,CAAC,EAClB,GAAGD,gBADe;AAElB,OAACgB,GAAG,CAACC,MAAJ,CAAWC,IAAZ,GAAmBF,GAAG,CAACC,MAAJ,CAAWE;AAFZ,KAAD,CAAnB;AAID,GALH;;AAMA,QAAMC,YAAY,GAAIJ,GAAD,IAAS;AAC1BA,IAAAA,GAAG,CAACK,cAAJ;;AAEA,QAAIrB,gBAAgB,CAACH,IAAjB,CAAsByB,MAAtB,KAAiC,CAAjC,IAAsCtB,gBAAgB,CAACD,OAAjB,CAAyBuB,MAAzB,KAAoC,CAA9E,EAAiF;AAC7E;AACArB,MAAAA,mBAAmB,CAAC,EAClB,GAAGL;AADe,OAAD,CAAnB;AAGH;AACJ,GATD;;AAUA,sBAAO;AAAA,2BACH;AAAS,MAAA,SAAS,EAAC,SAAnB;AAA6B,MAAA,EAAE,EAAC,UAAhC;AAAA,8BAEI;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,GAAG,EAAEiB,OAAV;AAAmB,QAAA,SAAS,EAAC,kBAA7B;AAAA,+BACI;AAAM,UAAA,MAAM,EAAC,GAAb;AAAiB,UAAA,SAAS,EAAC,2CAA3B;AAAuE,UAAA,QAAQ,EAAEO,YAAjF;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,iCAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,+BAAf;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,SAAS,EAAG,oCAAmChB,YAAY,CAACE,WAAb,GAA4B,4BAA5B,GAA2D,EAAE,EAA/H;AAAkI,gBAAA,EAAE,EAAC,MAArI;AAA4I,gBAAA,WAAW,EAAC;AAAxJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAK,cAAA,SAAS,EAAC,+BAAf;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,SAAS,EAAG,oCAAmCF,YAAY,CAACG,OAAb,GAAwB,4BAAxB,GAAuD,EAAE,EAA3H;AAA8H,gBAAA,EAAE,EAAC,OAAjI;AAAyI,gBAAA,WAAW,EAAC;AAArJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eASI;AAAK,cAAA,SAAS,EAAC,+BAAf;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAU,gBAAA,SAAS,EAAG,0BAAyBH,YAAY,CAACI,cAAb,GAA+B,+BAA/B,GAAiE,EAAE,gBAAlH;AAAmI,gBAAA,EAAE,EAAC,SAAtI;AAAgJ,gBAAA,YAAY,EAAC;AAA7J;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAaI;AAAK,cAAA,SAAS,EAAC,+BAAf;AAAA,sCACI;AAAO,gBAAA,cAAc,EAAEN,iBAAvB;AAA0C,gBAAA,IAAI,EAAC,UAA/C;AAA0D,gBAAA,SAAS,EAAC,wBAApE;AAA6F,gBAAA,EAAE,EAAC;AAAhG;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,OAAO,EAAC,WAAf;AAA2B,gBAAA,SAAS,EAAC,8BAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAmBI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,6BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AA8BH,CApHD;;GAAMP,O;;KAAAA,O;AAsHN,eAAeA,OAAf","sourcesContent":["import React, {useRef, useState} from 'react';\n\nconst Contact = () => {\n    const initialFormState = {\n        user: ``,\n        email: ``,\n        comment: ``,\n    };\n    const [currentFormState, setCurrentFormState] = useState({...initialFormState});\n    const [isCheckboxChecked, setIsCheckboxChecked] = useState(true);\n    const [isInputError, setIsInputError] = useState({\n        isUserError: false,\n        isEmail: false,\n        isCommentError: false,\n        isCheckBoxError: false\n    });\n    const checkInputContent = () => {\n        const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n        if (!currentFormState.user) {\n            setIsInputError({\n                ...isInputError,\n                isUserError: true\n            });\n        } else {\n            setIsInputError({\n                ...isInputError,\n                isUserError: false\n            });\n        }\n\n        if (!currentFormState.email || regex.test(currentFormState.email) === false) {\n            setIsInputError({\n                ...isInputError,\n                isEmail: true\n            });\n        } else {\n            setIsInputError({\n                ...isInputError,\n                isEmail: false\n            });\n        }\n\n        if (!currentFormState.comment) {\n            setIsInputError({\n                ...isInputError,\n                isCommentError: true\n            });\n        } else {\n            setIsInputError({\n                ...isInputError,\n                isCommentError: false\n            });\n        }\n\n        if (isCheckboxChecked === false) {\n            setIsInputError({\n                ...isInputError,\n                isCheckBoxError: true\n            });\n        } else {\n            setIsInputError({\n                ...isInputError,\n                isCheckBoxError: false\n            });\n        }\n\n      };\n    const formRef = useRef();\n    const validateForm = () => {\n\n    }\n\n    const handleInputChange = (evt) => {\n        setCurrentFormState({\n          ...currentFormState,\n          [evt.target.name]: evt.target.value,\n        });\n      };\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n\n        if (currentFormState.user.length !== 0 && currentFormState.comment.length !== 0) {\n            // onSubmitFormReview(currentFormState);\n            setCurrentFormState({\n              ...initialFormState,\n            });\n        }\n    }\n    return <>\n        <section className=\"contact\" id=\"contacts\">\n        \n            <h2 className=\"title contact__title\">Contact me</h2>\n            <p className=\"contact__slogan\">Have a question or want to work together? Send me a message and let's start your project right now!</p>\n            <div ref={formRef} className=\"contact__wrapper\">\n                <form action=\"#\" className=\"container-site contact__form contact-form\" onSubmit={handleSubmit}>\n                    <div className=\"list contact__list contact-form\">\n                        <div className=\"form-group contact-form__item\">\n                            <label htmlFor=\"name\"></label>\n                            <input type=\"text\" className={`form-control contact-form__input ${isInputError.isUserError ? `contact-form__input--error` : ``}`} id=\"name\" placeholder=\"Your name\"></input>\n                        </div>\n                        <div className=\"form-group contact-form__item\">\n                            <label htmlFor=\"email\"></label>\n                            <input type=\"text\" className={`form-control contact-form__input ${isInputError.isEmail ? `contact-form__input--error` : ``}`} id=\"email\" placeholder=\"Your email\"></input>\n                        </div>\n                        <div className=\"form-group contact-form__item\">\n                            <label htmlFor=\"message\"></label>\n                            <textarea className={`contact-form__textarea ${isInputError.isCommentError ? `contact-form__textarea--error` : ``} form-control `} id=\"message\" defaultValue=\"Leave me your message\"></textarea>\n                        </div>   \n                        <div className=\"form-group contact-form__item\">\n                            <input defaultChecked={isCheckboxChecked} type=\"checkbox\" className=\"contact-form__checkbox\" id=\"agreement\"></input>\n                            <label htmlFor=\"agreement\" className=\"contact-form__checkbox-label\">I agree to the assessment, use and processing of my personal data.</label>\n                        </div>\n                    </div>  \n                    <button type=\"submit\" className=\"button contact-form__button\">Send me a mesage</button> \n                </form>\n            </div>\n      </section>\n    </>\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}