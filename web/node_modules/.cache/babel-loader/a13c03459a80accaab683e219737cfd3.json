{"ast":null,"code":"var _jsxFileName = \"/Users/alex/projects/portfolio/src/components/navigation-site/navigation-site.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from \"react\";\nimport { allNavSiteLinks, MenuNav } from '../const/const';\nimport Logo from '../logo/logo';\nimport { ReactComponent as About } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../img/person.svg\";\nimport { ReactComponent as Skills } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../img/pencil-square.svg\";\nimport { ReactComponent as Interface } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../img/laptop.svg\";\nimport { ReactComponent as Projects } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../img/image.svg\";\nimport { ReactComponent as Contacts } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../img/envelope.svg\";\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../img/x.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NavigationSite = () => {\n  _s();\n\n  const defaultActiveLink = ``;\n  const [isMenuOpened, setIsMenuOpened] = useState(false);\n  const [activeLink, setActiveLink] = useState(defaultActiveLink);\n\n  const handleActiveLink = evt => {\n    setActiveLink(evt.target.dataset.link);\n  };\n\n  const returnSvgMenu = link => {\n    switch (link) {\n      case MenuNav.ABOUT:\n        return /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 24\n        }, this);\n\n      case MenuNav.SKILLS:\n        return /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this);\n\n      case MenuNav.INTERFACE:\n        return /*#__PURE__*/_jsxDEV(Interface, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }, this);\n\n      case MenuNav.PROJECTS:\n        return /*#__PURE__*/_jsxDEV(Projects, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 24\n        }, this);\n\n      case MenuNav.CONTACT:\n        return /*#__PURE__*/_jsxDEV(Contacts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return ``;\n    }\n  };\n\n  const handleMenuOnClick = () => {\n    if (isMenuOpened === false) {\n      setIsMenuOpened(true);\n    } else {\n      setIsMenuOpened(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: `header__nav menu ${isMenuOpened ? `menu--opened` : `menu--closed`} container`,\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu__nav\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list grid menu__list site-list\",\n            children: allNavSiteLinks.map(siteLink => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"menu__item  site-list__item\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `#${siteLink.href}`,\n                  onClick: handleActiveLink,\n                  className: `menu__link site-list__link ${siteLink.linkName === activeLink ? `site-list__link--active` : ``}`,\n                  \"data-link\": siteLink.linkName,\n                  children: [returnSvgMenu(siteLink.id), siteLink.linkName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 29\n                }, this)\n              }, siteLink.linkName, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 32\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu__toggle\",\n          type: \"button\",\n          onClick: handleMenuOnClick,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Open menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(NavigationSite, \"BhgNKAP2Li0ACiNCHv9lPtUO7vw=\");\n\n_c = NavigationSite;\nexport default NavigationSite;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationSite\");","map":{"version":3,"sources":["/Users/alex/projects/portfolio/src/components/navigation-site/navigation-site.jsx"],"names":["React","useState","allNavSiteLinks","MenuNav","Logo","NavigationSite","defaultActiveLink","isMenuOpened","setIsMenuOpened","activeLink","setActiveLink","handleActiveLink","evt","target","dataset","link","returnSvgMenu","ABOUT","SKILLS","INTERFACE","PROJECTS","CONTACT","handleMenuOnClick","map","siteLink","href","linkName","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState} from \"react\";\nimport { allNavSiteLinks, MenuNav } from '../const/const';\nimport Logo from '../logo/logo';\nimport { ReactComponent as About } from '../../img/person.svg';\nimport { ReactComponent as Skills } from '../../img/pencil-square.svg';\nimport { ReactComponent as Interface } from '../../img/laptop.svg';\nimport { ReactComponent as Projects } from '../../img/image.svg';\nimport { ReactComponent as Contacts } from '../../img/envelope.svg';\nimport { ReactComponent as Close } from '../../img/x.svg';\n\n\nconst NavigationSite = () => {\n    const defaultActiveLink = ``;\n    const [isMenuOpened, setIsMenuOpened]= useState(false)\n    const [activeLink, setActiveLink] = useState(defaultActiveLink);\n    const handleActiveLink = (evt) => {\n        setActiveLink(evt.target.dataset.link);\n    };\n    const returnSvgMenu = (link) => {\n        switch (link) {\n            case MenuNav.ABOUT:\n                return <About /> ;\n            case MenuNav.SKILLS:\n                return  <Skills />;\n            case MenuNav.INTERFACE:\n                return <Interface />;\n            case MenuNav.PROJECTS:\n                return <Projects />;\n            case MenuNav.CONTACT:\n                return <Contacts />;\n            default:\n                return ``;\n        }\n    }\n    const handleMenuOnClick = () => {\n        if(isMenuOpened === false) {\n            setIsMenuOpened(true)\n        } else {\n            setIsMenuOpened(false)\n        }\n    }\n    return <>\n        <header className=\"header\">\n            <nav className={`header__nav menu ${isMenuOpened ? `menu--opened` : `menu--closed`} container`}>\n                <Logo />\n                <div className=\"menu__nav\">\n                    <ul className=\"list grid menu__list site-list\">\n                        {allNavSiteLinks.map((siteLink) => {\n                        return <li key={siteLink.linkName} className=\"menu__item  site-list__item\">\n                            <a href={`#${siteLink.href}`} onClick={handleActiveLink} className={`menu__link site-list__link ${siteLink.linkName === activeLink ? `site-list__link--active` : ``}`} data-link={siteLink.linkName}>\n                                {returnSvgMenu(siteLink.id)}\n                                {siteLink.linkName}\n                            </a>\n                        </li>;\n                        })}\n                    </ul>\n                </div>\n                <button className=\"menu__toggle\" type=\"button\" onClick={handleMenuOnClick}>\n                    <span className=\"visually-hidden\">Open menu</span>\n                </button>\n            </nav>\n        </header>\n    </>\n}\n\nexport default NavigationSite;"]},"metadata":{},"sourceType":"module"}