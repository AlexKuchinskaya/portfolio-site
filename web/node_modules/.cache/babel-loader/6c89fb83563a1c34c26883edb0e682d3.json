{"ast":null,"code":"var _jsxFileName = \"/Users/alex/projects/portfolio/src/components/contacts/contact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const initialFormState = {\n    user: ``,\n    email: ``,\n    comment: ``\n  };\n  const [currentFormState, setCurrentFormState] = useState({ ...initialFormState\n  });\n  const [isCheckboxChecked, setIsCheckboxChecked] = useState(true);\n  const [isInputError, setIsInputError] = useState({\n    isUserError: false,\n    isEmail: false,\n    isCommentError: false,\n    isCheckBoxError: false\n  });\n\n  const checkUserInputContent = () => {\n    if (!currentFormState.user) {\n      setIsInputError({ ...isInputError,\n        isUserError: true\n      });\n    } else {\n      setIsInputError({ ...isInputError,\n        isUserError: false\n      });\n    }\n  };\n\n  const checkEmailInputContent = () => {\n    const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n    if (!currentFormState.email || regex.test(currentFormState.email) === false) {\n      setIsInputError({ ...isInputError,\n        isEmail: true\n      });\n    } else {\n      setIsInputError({ ...isInputError,\n        isEmail: false\n      });\n    }\n  };\n\n  const checkCommentInputContent = () => {\n    // console.log(`hello`, `checkinput is srunning`)\n    // console.log(`currentFormState checkinput`, currentFormState)\n    // const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    // if (!currentFormState.user) {\n    //     setIsInputError({\n    //         ...isInputError,\n    //         isUserError: true\n    //     });\n    // } else {\n    //     setIsInputError({\n    //         ...isInputError,\n    //         isUserError: false\n    //     });\n    // }\n    // if (!currentFormState.email || regex.test(currentFormState.email) === false) {\n    //     setIsInputError({\n    //         ...isInputError,\n    //         isEmail: true\n    //     });\n    // } else {\n    //     setIsInputError({\n    //         ...isInputError,\n    //         isEmail: false\n    //     });\n    // }\n    if (!currentFormState.comment) {\n      setIsInputError({ ...isInputError,\n        isCommentError: true\n      });\n    } else {\n      setIsInputError({ ...isInputError,\n        isCommentError: false\n      });\n    } // if (isCheckboxChecked === false) {\n    //     setIsInputError({\n    //         ...isInputError,\n    //         isCheckBoxError: true\n    //     });\n    // } else {\n    //     setIsInputError({\n    //         ...isInputError,\n    //         isCheckBoxError: false\n    //     });\n    // }\n\n  };\n\n  const checkCheckbox = () => {\n    if (isCheckboxChecked === false) {\n      setIsInputError({ ...isInputError,\n        isCheckBoxError: true\n      });\n    } else {\n      setIsInputError({ ...isInputError,\n        isCheckBoxError: false\n      });\n    }\n  }; // const formRef = useRef();\n  // const validateForm = () => {\n  // }\n\n\n  const handleInputChange = evt => {\n    console.log(`evt.target.name`, evt.target.name);\n    setCurrentFormState({ ...currentFormState,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    console.log(`currentFormState`, currentFormState);\n    checkUserInputContent(); // checkEmailInputContent();\n\n    checkCommentInputContent();\n    checkCheckbox();\n    console.log(`isInputError`, isInputError); // if (currentFormState.user.length !== 0 && currentFormState.comment.length !== 0) {\n    //     // onSubmitFormReview(currentFormState);\n    //     setCurrentFormState({\n    //       ...initialFormState,\n    //     });\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contact\",\n      id: \"contacts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title contact__title\",\n        children: \"Contact me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"contact__slogan\",\n        children: \"Have a question or want to work together? Send me a message and let's start your project right now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact__wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"#\",\n          className: \"container-site contact__form contact-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list contact__list contact-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group contact-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: `form-control contact-form__input ${isInputError.isUserError ? `contact-form__input--error` : ``}`,\n                name: \"user\",\n                id: \"name\",\n                autoFocus: true // placeholder=\"Your name\"\n                ,\n                value: currentFormState.user,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group contact-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                className: `form-control contact-form__input ${isInputError.isEmail ? `contact-form__input--error` : ``}`,\n                id: \"email\" // placeholder=\"Your email\"\n                ,\n                value: currentFormState.email,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group contact-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: `contact-form__textarea ${isInputError.isCommentError ? `contact-form__textarea--error` : ``} form-control `,\n                name: \"comment\",\n                id: \"message\" // defaultValue=\"Leave me your message\"\n                ,\n                value: currentFormState.comment,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group contact-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                defaultChecked: isCheckboxChecked,\n                type: \"checkbox\",\n                className: \"contact-form__checkbox\",\n                id: \"agreement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"agreement\",\n                className: \"contact-form__checkbox-label\",\n                children: \"I agree to the assessment, use and processing of my personal data.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button contact-form__button\",\n            children: \"Send me a mesage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Contact, \"+wYbuyX2i3Ui90ePbxVoYhpHWSc=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/alex/projects/portfolio/src/components/contacts/contact.jsx"],"names":["React","useState","Contact","initialFormState","user","email","comment","currentFormState","setCurrentFormState","isCheckboxChecked","setIsCheckboxChecked","isInputError","setIsInputError","isUserError","isEmail","isCommentError","isCheckBoxError","checkUserInputContent","checkEmailInputContent","regex","test","checkCommentInputContent","checkCheckbox","handleInputChange","evt","console","log","target","name","value","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\n\nconst Contact = () => {\n    const initialFormState = {\n        user: ``,\n        email: ``,\n        comment: ``,\n    };\n    const [currentFormState, setCurrentFormState] = useState({...initialFormState});\n    const [isCheckboxChecked, setIsCheckboxChecked] = useState(true);\n    const [isInputError, setIsInputError] = useState({\n        isUserError: false,\n        isEmail: false,\n        isCommentError: false,\n        isCheckBoxError: false\n    });\n    const checkUserInputContent = () => {\n        if (!currentFormState.user) {\n            setIsInputError({\n                ...isInputError,\n                isUserError: true\n            });\n        } else {\n            setIsInputError({\n                ...isInputError,\n                isUserError: false\n            });\n        }\n    }\n    const checkEmailInputContent = () => {\n        const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n        if (!currentFormState.email || regex.test(currentFormState.email) === false) {\n            setIsInputError({\n                ...isInputError,\n                isEmail: true\n            });\n        } else {\n            setIsInputError({\n                ...isInputError,\n                isEmail: false\n            });\n        }\n    }\n    const checkCommentInputContent = () => {\n        // console.log(`hello`, `checkinput is srunning`)\n        // console.log(`currentFormState checkinput`, currentFormState)\n        // const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n        // if (!currentFormState.user) {\n        //     setIsInputError({\n        //         ...isInputError,\n        //         isUserError: true\n        //     });\n        // } else {\n        //     setIsInputError({\n        //         ...isInputError,\n        //         isUserError: false\n        //     });\n        // }\n\n        // if (!currentFormState.email || regex.test(currentFormState.email) === false) {\n        //     setIsInputError({\n        //         ...isInputError,\n        //         isEmail: true\n        //     });\n        // } else {\n        //     setIsInputError({\n        //         ...isInputError,\n        //         isEmail: false\n        //     });\n        // }\n\n        if (!currentFormState.comment) {\n            setIsInputError({\n                ...isInputError,\n                isCommentError: true\n            });\n        } else {\n            setIsInputError({\n                ...isInputError,\n                isCommentError: false\n            });\n        }\n\n        // if (isCheckboxChecked === false) {\n        //     setIsInputError({\n        //         ...isInputError,\n        //         isCheckBoxError: true\n        //     });\n        // } else {\n        //     setIsInputError({\n        //         ...isInputError,\n        //         isCheckBoxError: false\n        //     });\n        // }\n\n      };\n      const checkCheckbox = () => {\n        if (isCheckboxChecked === false) {\n            setIsInputError({\n                ...isInputError,\n                isCheckBoxError: true\n            });\n        } else {\n            setIsInputError({\n                ...isInputError,\n                isCheckBoxError: false\n            });\n        }\n      }\n    // const formRef = useRef();\n    // const validateForm = () => {\n\n    // }\n\n    const handleInputChange = (evt) => {\n        console.log(`evt.target.name`, evt.target.name)\n        setCurrentFormState({\n          ...currentFormState,\n          [evt.target.name]: evt.target.value,\n        });\n      };\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        console.log(`currentFormState`, currentFormState)\n        checkUserInputContent();\n        // checkEmailInputContent();\n        checkCommentInputContent();\n        checkCheckbox();\n        console.log(`isInputError`, isInputError)\n        // if (currentFormState.user.length !== 0 && currentFormState.comment.length !== 0) {\n        //     // onSubmitFormReview(currentFormState);\n        //     setCurrentFormState({\n        //       ...initialFormState,\n        //     });\n        // }\n    }\n    return <>\n        <section className=\"contact\" id=\"contacts\">\n        \n            <h2 className=\"title contact__title\">Contact me</h2>\n            <p className=\"contact__slogan\">Have a question or want to work together? Send me a message and let's start your project right now!</p>\n            <div className=\"contact__wrapper\">\n                <form action=\"#\" className=\"container-site contact__form contact-form\" onSubmit={handleSubmit}>\n                    <div className=\"list contact__list contact-form\">\n                        <div className=\"form-group contact-form__item\">\n                            <label htmlFor=\"name\"></label>\n                            <input \n                                type=\"text\" \n                                className={`form-control contact-form__input ${isInputError.isUserError ? `contact-form__input--error` : ``}`} \n                                name=\"user\"\n                                id=\"name\" \n                                autoFocus={true}\n                                // placeholder=\"Your name\"\n                                value={currentFormState.user}\n                                onChange={handleInputChange}\n                            >\n                            </input>\n                        </div>\n                        <div className=\"form-group contact-form__item\">\n                            <label htmlFor=\"email\"></label>\n                            <input \n                                type=\"email\" \n                                name=\"email\"\n                                className={`form-control contact-form__input ${isInputError.isEmail ? `contact-form__input--error` : ``}`} \n                                id=\"email\"\n                                // placeholder=\"Your email\"\n                                value={currentFormState.email}\n                                onChange={handleInputChange}\n                            >\n                            </input>\n                        </div>\n                        <div className=\"form-group contact-form__item\">\n                            <label htmlFor=\"message\"></label>\n                            <textarea \n                                className={`contact-form__textarea ${isInputError.isCommentError ? `contact-form__textarea--error` : ``} form-control `}\n                                name=\"comment\"\n                                id=\"message\"\n                                // defaultValue=\"Leave me your message\"\n                                value={currentFormState.comment}\n                                onChange={handleInputChange}\n                            >\n                            </textarea>\n                        </div>   \n                        <div className=\"form-group contact-form__item\">\n                            <input defaultChecked={isCheckboxChecked} type=\"checkbox\" className=\"contact-form__checkbox\" id=\"agreement\"></input>\n                            <label htmlFor=\"agreement\" className=\"contact-form__checkbox-label\">I agree to the assessment, use and processing of my personal data.</label>\n                        </div>\n                    </div>  \n                    <button type=\"submit\" className=\"button contact-form__button\">Send me a mesage</button> \n                </form>\n            </div>\n      </section>\n    </>\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}