{"ast":null,"code":"var _jsxFileName = \"/Users/alex/projects/portfolio/src/components/contacts/contact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const initialFormState = {\n    user: ``,\n    email: ``,\n    comment: ``\n  };\n  const [currentFormState, setCurrentFormState] = useState({ ...initialFormState\n  });\n  const [isCheckboxChecked, setIsCheckboxChecked] = useState(true);\n  const [isUserError, setIsUserError] = useState(false);\n  const [isEmailError, setIsEmailError] = useState(false);\n  const [isCommentError, setIsCommentError] = useState(false);\n  const [isCheckBoxError, setIsCheckBoxError] = useState(false);\n  const [isInputError, setIsInputError] = useState({\n    isUserError: false,\n    isEmail: false,\n    isCommentError: false,\n    isCheckBoxError: false\n  });\n\n  const checkUserInputContent = () => {\n    if (!currentFormState.user) {\n      setIsUserError(true);\n    } else {\n      setIsUserError(false);\n    }\n  };\n\n  const checkEmailInputContent = () => {\n    const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n    if (!currentFormState.email || regex.test(currentFormState.email) === false) {\n      setIsEmailError(true);\n    } else {\n      setIsEmailError(false);\n    }\n  };\n\n  const checkCommentInputContent = () => {\n    if (!currentFormState.comment) {\n      setIsCommentError(true);\n    } else {\n      setIsCommentError(false);\n    }\n  };\n\n  const checkCheckboxInput = () => {\n    if (isCheckboxChecked === false) {\n      setIsCheckBoxError(true);\n    } else {\n      setIsCheckBoxError(false);\n    }\n  }; // const formRef = useRef();\n  // const validateForm = () => {\n  // }\n\n\n  const handleInputChange = evt => {\n    console.log(`evt.target.name`, evt.target.name);\n    setCurrentFormState({ ...currentFormState,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    console.log(`currentFormState`, currentFormState);\n    checkUserInputContent();\n    checkEmailInputContent();\n    checkCommentInputContent();\n    checkCheckboxInput();\n    console.log(`isInputError`, isInputError); // if (currentFormState.user.length !== 0 && currentFormState.comment.length !== 0) {\n    //     // onSubmitFormReview(currentFormState);\n    //     setCurrentFormState({\n    //       ...initialFormState,\n    //     });\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contact\",\n      id: \"contacts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title contact__title\",\n        children: \"Contact me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"contact__slogan\",\n        children: \"Have a question or want to work together? Send me a message and let's start your project right now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact__wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"#\",\n          className: \"container-site contact__form contact-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list contact__list contact-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group contact-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: `form-control contact-form__input ${isUserError ? `contact-form__input--error` : ``}`,\n                name: \"user\",\n                id: \"name\",\n                autoFocus: true // placeholder=\"Your name\"\n                ,\n                value: currentFormState.user,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group contact-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                className: `form-control contact-form__input ${isEmailError ? `contact-form__input--error` : ``}`,\n                id: \"email\" // placeholder=\"Your email\"\n                ,\n                value: currentFormState.email,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group contact-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: `contact-form__textarea ${isCommentError ? `contact-form__textarea--error` : ``} form-control `,\n                name: \"comment\",\n                id: \"message\" // defaultValue=\"Leave me your message\"\n                ,\n                value: currentFormState.comment,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `form-group contact-form__item ${isCheckBoxError ? `contact-form__item--checkbox-error` : ``}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                defaultChecked: isCheckboxChecked,\n                type: \"checkbox\",\n                className: \"contact-form__checkbox\",\n                id: \"agreement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"agreement\",\n                className: \"contact-form__checkbox-label\",\n                children: \"I agree to the assessment, use and processing of my personal data.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button contact-form__button\",\n            children: \"Send me a mesage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Contact, \"SxIh0AL3uc+eeiUEapZAFu91x/0=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/alex/projects/portfolio/src/components/contacts/contact.jsx"],"names":["React","useState","Contact","initialFormState","user","email","comment","currentFormState","setCurrentFormState","isCheckboxChecked","setIsCheckboxChecked","isUserError","setIsUserError","isEmailError","setIsEmailError","isCommentError","setIsCommentError","isCheckBoxError","setIsCheckBoxError","isInputError","setIsInputError","isEmail","checkUserInputContent","checkEmailInputContent","regex","test","checkCommentInputContent","checkCheckboxInput","handleInputChange","evt","console","log","target","name","value","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\n\nconst Contact = () => {\n    const initialFormState = {\n        user: ``,\n        email: ``,\n        comment: ``,\n    };\n    const [currentFormState, setCurrentFormState] = useState({...initialFormState});\n    const [isCheckboxChecked, setIsCheckboxChecked] = useState(true);\n    const [isUserError, setIsUserError] = useState(false);\n    const [isEmailError, setIsEmailError] = useState(false);\n    const [isCommentError, setIsCommentError] = useState(false);\n    const [isCheckBoxError, setIsCheckBoxError] = useState(false);\n    const [isInputError, setIsInputError] = useState({\n        isUserError: false,\n        isEmail: false,\n        isCommentError: false,\n        isCheckBoxError: false\n    });\n    const checkUserInputContent = () => {\n        if (!currentFormState.user) {\n            setIsUserError(true);\n        } else {\n            setIsUserError(false);\n        }\n    }\n    const checkEmailInputContent = () => {\n        const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n        if (!currentFormState.email || regex.test(currentFormState.email) === false) {\n            setIsEmailError(true);\n        } else {\n            setIsEmailError(false);\n        }\n    }\n    const checkCommentInputContent = () => {\n        if (!currentFormState.comment) {\n            setIsCommentError(true);\n        } else {\n            setIsCommentError(false);\n        }\n      };\n      const checkCheckboxInput = () => {\n        if (isCheckboxChecked === false) {\n            setIsCheckBoxError(true)\n        } else {\n            setIsCheckBoxError(false)\n        }\n      }\n    // const formRef = useRef();\n    // const validateForm = () => {\n\n    // }\n\n    const handleInputChange = (evt) => {\n        console.log(`evt.target.name`, evt.target.name)\n        setCurrentFormState({\n          ...currentFormState,\n          [evt.target.name]: evt.target.value,\n        });\n    };\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        console.log(`currentFormState`, currentFormState)\n        checkUserInputContent();\n        checkEmailInputContent();\n        checkCommentInputContent();\n        checkCheckboxInput()\n        console.log(`isInputError`, isInputError)\n        // if (currentFormState.user.length !== 0 && currentFormState.comment.length !== 0) {\n        //     // onSubmitFormReview(currentFormState);\n        //     setCurrentFormState({\n        //       ...initialFormState,\n        //     });\n        // }\n    }\n    return <>\n        <section className=\"contact\" id=\"contacts\">\n        \n            <h2 className=\"title contact__title\">Contact me</h2>\n            <p className=\"contact__slogan\">Have a question or want to work together? Send me a message and let's start your project right now!</p>\n            <div className=\"contact__wrapper\">\n                <form action=\"#\" className=\"container-site contact__form contact-form\" onSubmit={handleSubmit}>\n                    <div className=\"list contact__list contact-form\">\n                        <div className=\"form-group contact-form__item\">\n                            <label htmlFor=\"name\"></label>\n                            <input \n                                type=\"text\" \n                                className={`form-control contact-form__input ${isUserError ? `contact-form__input--error` : ``}`} \n                                name=\"user\"\n                                id=\"name\" \n                                autoFocus={true}\n                                // placeholder=\"Your name\"\n                                value={currentFormState.user}\n                                onChange={handleInputChange}\n                            >\n                            </input>\n                        </div>\n                        <div className=\"form-group contact-form__item\">\n                            <label htmlFor=\"email\"></label>\n                            <input \n                                type=\"email\" \n                                name=\"email\"\n                                className={`form-control contact-form__input ${isEmailError ? `contact-form__input--error` : ``}`} \n                                id=\"email\"\n                                // placeholder=\"Your email\"\n                                value={currentFormState.email}\n                                onChange={handleInputChange}\n                            >\n                            </input>\n                        </div>\n                        <div className=\"form-group contact-form__item\">\n                            <label htmlFor=\"message\"></label>\n                            <textarea \n                                className={`contact-form__textarea ${isCommentError ? `contact-form__textarea--error` : ``} form-control `}\n                                name=\"comment\"\n                                id=\"message\"\n                                // defaultValue=\"Leave me your message\"\n                                value={currentFormState.comment}\n                                onChange={handleInputChange}\n                            >\n                            </textarea>\n                        </div>   \n                        <div className={`form-group contact-form__item ${isCheckBoxError ? `contact-form__item--checkbox-error` : ``}`}>\n                            <input defaultChecked={isCheckboxChecked} type=\"checkbox\" className=\"contact-form__checkbox\" id=\"agreement\"></input>\n                            <label htmlFor=\"agreement\" className=\"contact-form__checkbox-label\">I agree to the assessment, use and processing of my personal data.</label>\n                        </div>\n                    </div>  \n                    <button type=\"submit\" className=\"button contact-form__button\">Send me a mesage</button> \n                </form>\n            </div>\n      </section>\n    </>\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}