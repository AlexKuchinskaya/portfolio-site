{"ast":null,"code":"var _jsxFileName = \"/Users/alex/projects/portfolio/web/src/components/contacts/contact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const initialFormState = {\n    user: ``,\n    email: ``,\n    comment: ``\n  };\n  const [currentFormState, setCurrentFormState] = useState({ ...initialFormState\n  });\n  const [isCheckboxChecked, setIsCheckboxChecked] = useState(true);\n  const [isUserError, setIsUserError] = useState(false);\n  const [isEmailError, setIsEmailError] = useState(false);\n  const [isCommentError, setIsCommentError] = useState(false);\n  const [isCheckBoxError, setIsCheckBoxError] = useState(false);\n  const [isInputError, setIsInputError] = useState({\n    isUserError: false,\n    isEmail: false,\n    isCommentError: false,\n    isCheckBoxError: false\n  });\n\n  const checkUserInputContent = () => {\n    if (!currentFormState.user) {\n      setIsUserError(true);\n    } else {\n      setIsUserError(false);\n    }\n  };\n\n  const checkEmailInputContent = () => {\n    const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n    if (!currentFormState.email || regex.test(currentFormState.email) === false) {\n      setIsEmailError(true);\n    } else {\n      setIsEmailError(false);\n    }\n  };\n\n  const checkCommentInputContent = () => {\n    if (!currentFormState.comment) {\n      setIsCommentError(true);\n    } else {\n      setIsCommentError(false);\n    }\n  };\n\n  const checkCheckboxInput = () => {\n    if (isCheckboxChecked === false) {\n      setIsCheckBoxError(true);\n    } else {\n      setIsCheckBoxError(false);\n    }\n  }; // const formRef = useRef();\n  // const validateForm = () => {\n  // }\n\n\n  const handleCheckboxInput = () => {\n    setIsCheckboxChecked(!isCheckboxChecked);\n  };\n\n  const handleInputChange = evt => {\n    console.log(`evt.target.name`, evt.target.name);\n    setCurrentFormState({ ...currentFormState,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const onSubmitFormReview = async () => {\n    const formResponse = await axios.post('/sendmail', currentFormState);\n    console.log(`formResponse`, formResponse); //add gif sending block form\n    // let formData = new FormData(currentFormState)\n    // let response = await fetch(`sendmail.php`, {\n    //     method: `POST`,\n    //     body: formData\n    // });\n    // if (response.ok) {\n    //     let result = await response.json();\n    //     alert(result.message);\n    //     setCurrentFormState({\n    //       ...initialFormState,\n    //     });\n    //     //remove gif sending block form\n    // } else {\n    //     alert(`error`)\n    // }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    console.log(`currentFormState`, currentFormState);\n    checkUserInputContent();\n    checkEmailInputContent();\n    checkCommentInputContent();\n    checkCheckboxInput();\n    onSubmitFormReview();\n    console.log(`isInputError`, isInputError); // if (currentFormState.user.length !== 0 && currentFormState.comment.length !== 0) {\n    //     // onSubmitFormReview(currentFormState);\n    //     setCurrentFormState({\n    //       ...initialFormState,\n    //     });\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contact\",\n      id: \"contacts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title contact__title\",\n        children: \"Contact me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"contact__slogan\",\n        children: \"Have a question or want to work together? Send me a message and let's start your project right now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact__wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"#\",\n          className: \"container-site contact__form contact-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list contact__list contact-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group contact-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: `contact-form__label ${isUserError ? `contact-form__label--error` : ``}`,\n                htmlFor: \"name\",\n                children: [\"Your name\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 144\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: `form-control contact-form__input ${isUserError ? `contact-form__input--error` : ``}`,\n                name: \"user\",\n                id: \"name\",\n                autoFocus: true,\n                value: currentFormState.user,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group contact-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: `contact-form__label ${isEmailError ? `contact-form__label--error` : ``}`,\n                htmlFor: \"email\",\n                children: [\"Your email\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 147\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                className: `form-control contact-form__input ${isEmailError ? `contact-form__input--error` : ``}`,\n                id: \"email\",\n                value: currentFormState.email,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group contact-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: `contact-form__label ${isCommentError ? `contact-form__label--error` : ``}`,\n                htmlFor: \"message\",\n                children: [\"Your message\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 153\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: `contact-form__textarea ${isCommentError ? `contact-form__textarea--error` : ``} form-control `,\n                name: \"comment\",\n                id: \"message\",\n                value: currentFormState.comment,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `form-group contact-form__item ${isCheckBoxError ? `contact-form__item--checkbox-error` : ``}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: handleCheckboxInput,\n                defaultChecked: isCheckboxChecked,\n                type: \"checkbox\",\n                className: \"contact-form__checkbox\",\n                id: \"agreement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"agreement\",\n                className: \"contact-form__checkbox-label\",\n                children: \"I agree to the assessment, use and processing of my personal data.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button contact-form__button\",\n            children: \"Send me a mesage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Contact, \"SxIh0AL3uc+eeiUEapZAFu91x/0=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/alex/projects/portfolio/web/src/components/contacts/contact.jsx"],"names":["React","useState","axios","Contact","initialFormState","user","email","comment","currentFormState","setCurrentFormState","isCheckboxChecked","setIsCheckboxChecked","isUserError","setIsUserError","isEmailError","setIsEmailError","isCommentError","setIsCommentError","isCheckBoxError","setIsCheckBoxError","isInputError","setIsInputError","isEmail","checkUserInputContent","checkEmailInputContent","regex","test","checkCommentInputContent","checkCheckboxInput","handleCheckboxInput","handleInputChange","evt","console","log","target","name","value","onSubmitFormReview","formResponse","post","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport axios from 'axios';\n\nconst Contact = () => {\n    const initialFormState = {\n        user: ``,\n        email: ``,\n        comment: ``,\n    };\n    const [currentFormState, setCurrentFormState] = useState({...initialFormState});\n    const [isCheckboxChecked, setIsCheckboxChecked] = useState(true);\n    const [isUserError, setIsUserError] = useState(false);\n    const [isEmailError, setIsEmailError] = useState(false);\n    const [isCommentError, setIsCommentError] = useState(false);\n    const [isCheckBoxError, setIsCheckBoxError] = useState(false);\n    const [isInputError, setIsInputError] = useState({\n        isUserError: false,\n        isEmail: false,\n        isCommentError: false,\n        isCheckBoxError: false\n    });\n    const checkUserInputContent = () => {\n        if (!currentFormState.user) {\n            setIsUserError(true);\n        } else {\n            setIsUserError(false);\n        }\n    }\n    const checkEmailInputContent = () => {\n        const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n        if (!currentFormState.email || regex.test(currentFormState.email) === false) {\n            setIsEmailError(true);\n        } else {\n            setIsEmailError(false);\n        }\n    }\n    const checkCommentInputContent = () => {\n        if (!currentFormState.comment) {\n            setIsCommentError(true);\n        } else {\n            setIsCommentError(false);\n        }\n      };\n      const checkCheckboxInput = () => {\n        if (isCheckboxChecked === false) {\n            setIsCheckBoxError(true)\n        } else {\n            setIsCheckBoxError(false)\n        }\n      }\n    // const formRef = useRef();\n    // const validateForm = () => {\n\n    // }\n    const handleCheckboxInput = () => {\n        setIsCheckboxChecked(!isCheckboxChecked);\n    }\n    const handleInputChange = (evt) => {\n        console.log(`evt.target.name`, evt.target.name)\n        setCurrentFormState({\n          ...currentFormState,\n          [evt.target.name]: evt.target.value,\n        });\n    };\n    const onSubmitFormReview = async () => {\n        const formResponse = await axios.post('/sendmail', currentFormState);\n        console.log(`formResponse`, formResponse);\n        //add gif sending block form\n        // let formData = new FormData(currentFormState)\n        // let response = await fetch(`sendmail.php`, {\n        //     method: `POST`,\n        //     body: formData\n        // });\n        // if (response.ok) {\n        //     let result = await response.json();\n        //     alert(result.message);\n\n        //     setCurrentFormState({\n        //       ...initialFormState,\n        //     });\n        //     //remove gif sending block form\n        // } else {\n        //     alert(`error`)\n        // }\n\n\n\n    }\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        console.log(`currentFormState`, currentFormState)\n        checkUserInputContent();\n        checkEmailInputContent();\n        checkCommentInputContent();\n        checkCheckboxInput();\n        onSubmitFormReview();\n        console.log(`isInputError`, isInputError)\n        // if (currentFormState.user.length !== 0 && currentFormState.comment.length !== 0) {\n        //     // onSubmitFormReview(currentFormState);\n        //     setCurrentFormState({\n        //       ...initialFormState,\n        //     });\n        // }\n    }\n    return <>\n        <section className=\"contact\" id=\"contacts\">\n        \n            <h2 className=\"title contact__title\">Contact me</h2>\n            <p className=\"contact__slogan\">Have a question or want to work together? Send me a message and let's start your project right now!</p>\n            <div className=\"contact__wrapper\">\n                <form action=\"#\" className=\"container-site contact__form contact-form\" onSubmit={handleSubmit}>\n                    <div className=\"list contact__list contact-form\">\n                        <div className=\"form-group contact-form__item\">\n                            <label className={`contact-form__label ${isUserError ?`contact-form__label--error` : ``}`} htmlFor=\"name\">Your name<sup>*</sup></label>\n                            <input \n                                type=\"text\" \n                                className={`form-control contact-form__input ${isUserError ? `contact-form__input--error` : ``}`} \n                                name=\"user\"\n                                id=\"name\" \n                                autoFocus={true}\n                                value={currentFormState.user}\n                                onChange={handleInputChange}\n                            >\n                            </input>\n                        </div>\n                        <div className=\"form-group contact-form__item\">\n                            <label className={`contact-form__label ${isEmailError ?`contact-form__label--error` : ``}`} htmlFor=\"email\">Your email<sup>*</sup></label>\n                            <input \n                                type=\"email\" \n                                name=\"email\"\n                                className={`form-control contact-form__input ${isEmailError ? `contact-form__input--error` : ``}`} \n                                id=\"email\"\n                                value={currentFormState.email}\n                                onChange={handleInputChange}\n                            >\n                            </input>\n                        </div>\n                        <div className=\"form-group contact-form__item\">\n                            <label className={`contact-form__label ${isCommentError ?`contact-form__label--error` : ``}`} htmlFor=\"message\">Your message<sup>*</sup></label>\n                            <textarea \n                                className={`contact-form__textarea ${isCommentError ? `contact-form__textarea--error` : ``} form-control `}\n                                name=\"comment\"\n                                id=\"message\"\n                                value={currentFormState.comment}\n                                onChange={handleInputChange}\n                            >\n                            </textarea>\n                        </div>   \n                        <div className={`form-group contact-form__item ${isCheckBoxError ? `contact-form__item--checkbox-error` : ``}`}>\n                            <input \n                                onChange={handleCheckboxInput}\n                                defaultChecked={isCheckboxChecked}\n                                type=\"checkbox\" className=\"contact-form__checkbox\" id=\"agreement\"\n                            >\n                            </input>\n                            <label htmlFor=\"agreement\" className=\"contact-form__checkbox-label\">I agree to the assessment, use and processing of my personal data.</label>\n                        </div>\n                    </div>  \n                    <button type=\"submit\" className=\"button contact-form__button\">Send me a mesage</button> \n                </form>\n            </div>\n      </section>\n    </>\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}